[versions]
minSdk = "26"
compileSdk = "35"
targetSdk = "34"
versionCode = "1"
versionName = "1.0.0"

kotlin = "2.1.20"
androidGradlePlugin = "8.7.3"
ksp = "2.1.20-1.0.31"
ktorfit = "2.4.1"
mokoResources = "0.24.5"
moduleGraph = "1.3.3"
detekt = "1.23.8"
dateTime = "0.6.2"
coroutines = "1.10.1"
decompose = "3.2.2"
ktor = "3.1.0"
replica = "1.3.1-alpha1"
koin = "4.0.2"
kermit = "2.0.5"
composeBom = "2025.05.00"
activity = "1.10.1"
coil = "3.1.0"
splashscreen = "1.0.1"
accompanist = "0.36.0"
chucker = "4.0.0"
hyperion = "0.9.38"
hyperionAddons = "0.3.3"
composeRules = "0.4.18"
form = "1.2.0"
securityCrypto = "1.1.0-alpha06"
camera = "1.4.1"
media3 = "1.4.1"
qrose = "1.0.1"
vico = "2.0.1"
calendar = "2.6.2"
barcodeScanning = "17.2.0"
biometric = "1.2.0-alpha05"
googlePlayServiceAuth = "17.0.0"
googlePlayServiceAuthPhone = "17.4.0"
yandexMapKit = "4.12.0-lite"
gmsLocation = "21.0.1"
coroutinesPlayServices = "1.4.1"
androidImageCropper = "4.6.0"
googleMaps = "6.5.2"
sesame = "1.5.0"
room = "2.7.0"
work = "2.10.1"
arCore = "1.48.0"
java-gl-obj = "0.4.0"

[libraries]
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "dateTime" }
coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "coroutines" }
coroutines-android = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }

decompose-core = { module = "com.arkivanov.decompose:decompose", version.ref = "decompose" }
decompose-compose = { module = "com.arkivanov.decompose:extensions-compose", version.ref = "decompose" }
decompose-compose-experimental = { module = "com.arkivanov.decompose:extensions-compose-experimental", version.ref = "decompose" }

ktor-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }
ktor-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-content-negotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-android = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktorfit-lib = { module = "de.jensklingenberg.ktorfit:ktorfit-lib", version.ref = "ktorfit" }
ktorfit-ksp = { module = "de.jensklingenberg.ktorfit:ktorfit-ksp", version.ref = "ktorfit" }

replica-core = { module = "com.github.aartikov:replica-core", version.ref = "replica" }
replica-algebra = { module = "com.github.aartikov:replica-algebra", version.ref = "replica" }
replica-android-network = { module = "com.github.aartikov:replica-android-network", version.ref = "replica" }
replica-decompose = { module = "com.github.aartikov:replica-decompose", version.ref = "replica" }
replica-devtools = { module = "com.github.aartikov:replica-devtools", version.ref = "replica" }

form-validation = { module = "ru.mobileup:kmm-form-validation", version.ref = "form" }

koin = { module = "io.insert-koin:koin-core", version.ref = "koin" }
koin-workmanager = { module = "io.insert-koin:koin-androidx-workmanager", version.ref = "koin" }
logger-kermit = { module = "co.touchlab:kermit", version.ref = "kermit" }

# Used in build-logic/DetektPlugin
detekt-formatting = { module = "io.gitlab.arturbosch.detekt:detekt-formatting", version.ref = "detekt" }
detekt-compose-rules = { module = "io.nlopez.compose.rules:detekt", version.ref = "composeRules" }

# Used in build-logic/com/buildlogic/CommonComposeAndroid.kt/configureAndroidCompose
compose-bom = { module = "androidx.compose:compose-bom", version.ref = "composeBom" }
compose-ui = { module = "androidx.compose.ui:ui" }
compose-material = { module = "androidx.compose.material3:material3" }
compose-material-icons = { module = "androidx.compose.material:material-icons-core" }
compose-tooling = { module = "androidx.compose.ui:ui-tooling" }
activity-compose = { module = "androidx.activity:activity-compose", version.ref = "activity" }

compose-calendar = { group = "com.kizitonwose.calendar", name = "compose", version.ref = "calendar" }

qrose = { group = "io.github.alexzhirkevich", name = "qrose", version.ref = "qrose" }

barcode-scanning = { module = "com.google.mlkit:barcode-scanning", version.ref = "barcodeScanning" }

security-crypto = { module = "androidx.security:security-crypto", version.ref = "securityCrypto" }
security-crypto-ktx = { module = "androidx.security:security-crypto-ktx", version.ref = "securityCrypto" }

camera-core = { module = "androidx.camera:camera-core", version.ref = "camera" }
camera-camera2 = { module = "androidx.camera:camera-camera2", version.ref = "camera" }
camera-lifecycle = { module = "androidx.camera:camera-lifecycle", version.ref = "camera" }
camera-video = { module = "androidx.camera:camera-video", version.ref = "camera" }
camera-view = { module = "androidx.camera:camera-view", version.ref = "camera" }

media3-exoplayer = { group = "androidx.media3", name = "media3-exoplayer", version.ref = "media3" }
media3-transformer = { group = "androidx.media3", name = "media3-transformer", version.ref = "media3" }

coil = { module = "io.coil-kt.coil3:coil-compose", version.ref = "coil" }
coil-video = { module = "io.coil-kt.coil3:coil-video", version.ref = "coil" }
coil-okhttp = { module = "io.coil-kt.coil3:coil-network-okhttp", version.ref = "coil" }

splashscreen = { module = "androidx.core:core-splashscreen", version.ref = "splashscreen" }

accompanist-systemuicontroller = { module = "com.google.accompanist:accompanist-systemuicontroller", version.ref = "accompanist" }
accompanist-swiperefresh = { module = "com.google.accompanist:accompanist-swiperefresh", version.ref = "accompanist" }

moko-resources = { module = "dev.icerock.moko:resources", version.ref = "mokoResources" }
moko-resourcesCompose = { module = "dev.icerock.moko:resources-compose", version.ref = "mokoResources" }

chucker = { module = "com.github.chuckerteam.chucker:library", version.ref = "chucker" }
hyperion-core = { module = "com.willowtreeapps.hyperion:hyperion-core", version.ref = "hyperion" }
hyperion-recorder = { module = "com.willowtreeapps.hyperion:hyperion-recorder", version.ref = "hyperion" }
hyperion-crash = { module = "com.willowtreeapps.hyperion:hyperion-crash", version.ref = "hyperion" }
hyperion-disk = { module = "com.willowtreeapps.hyperion:hyperion-disk", version.ref = "hyperion" }
hyperion-addons-logs = { module = "me.nemiron.hyperion:logs", version.ref = "hyperionAddons" }
hyperion-addons-networkEmulation = { module = "me.nemiron.hyperion:network-emulation", version.ref = "hyperionAddons" }
hyperion-addons-chucker = { module = "me.nemiron.hyperion:chucker", version.ref = "hyperionAddons" }

android-gradle-plugin = { module = "com.android.tools.build:gradle", version.ref = "androidGradlePlugin" }
kotlin-gradle-plugin = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
detekt-gradle-plugin = { module = "io.gitlab.arturbosch.detekt:detekt-gradle-plugin", version.ref = "detekt" }

vico-compose = { group = "com.patrykandpatrick.vico", name = "compose", version.ref = "vico" }

biometrics = { group = "androidx.biometric", name = "biometric", version.ref = "biometric" }

google-playservice-auth = { module = "com.google.android.gms:play-services-auth", version.ref = "googlePlayServiceAuth" }
google-playservice-auth-phone = { module = "com.google.android.gms:play-services-auth-api-phone", version.ref = "googlePlayServiceAuthPhone" }

yandex-mapkit = { module = "com.yandex.android:maps.mobile", version.ref = "yandexMapKit" }
gms-location = { module = "com.google.android.gms:play-services-location", version.ref = "gmsLocation" }
gms-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-play-services", version.ref = "coroutinesPlayServices" }
google-maps = { module = "com.google.maps.android:maps-compose", version.ref = "googleMaps" }
google-map-compose-utils = { module = "com.google.maps.android:maps-compose-utils", version.ref = "googleMaps" }

sesame-loop = { module = "com.github.aartikov:sesame-loop", version.ref = "sesame" }

room-runtime = { module = "androidx.room:room-runtime", version.ref = "room" }
room-compiler = { module = "androidx.room:room-compiler", version.ref = "room" }
room-ktx = { module = "androidx.room:room-ktx", version.ref = "room" }

android-image-cropper = { module = "com.vanniktech:android-image-cropper", version.ref = "androidImageCropper" }

work-ktx = { module = "androidx.work:work-runtime-ktx", version.ref = "work" }

ar-core = { module = "com.google.ar:core", version.ref = "arCore" }
java-gl-obj = { module = "de.javagl:obj", version.ref = "java-gl-obj"}

[bundles]
decompose = ["decompose-core", "decompose-compose", "decompose-compose-experimental"]
replica = ["replica-core", "replica-algebra", "replica-android-network", "replica-decompose"]
compose = ["compose-ui", "compose-material", "compose-tooling", "activity-compose"]
accompanist = ["accompanist-systemuicontroller", "accompanist-swiperefresh"]
ktor = [
    "ktor-core",
    "ktor-auth",
    "ktor-serialization",
    "ktor-content-negotiation",
    "ktor-logging",
    "ktor-android"
]
hyperion = [
    "hyperion-core",
    "hyperion-recorder",
    "hyperion-crash",
    "hyperion-disk",
    "hyperion-addons-logs",
    "hyperion-addons-networkEmulation",
    "hyperion-addons-chucker"
]
coil = [
    "coil",
    "coil-video",
    "coil-okhttp"
]
google-maps = [
    "google-maps",
    "google-map-compose-utils"
]
ar = [
    "ar-core",
    "java-gl-obj"
]

[plugins]
android-application = { id = "com.android.application", version.ref = "androidGradlePlugin" }
android-library = { id = "com.android.library", version.ref = "androidGradlePlugin" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
module-graph = { id = "ru.mobileup.module-graph", version.ref = "moduleGraph" }
kotlin-android = { id = "org.jetbrains.kotlin.android", version.ref = "kotlin" }
kotlin-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
ktorfit = { id = "de.jensklingenberg.ktorfit", version.ref = "ktorfit" }
moko-resources = { id = "dev.icerock.mobile.multiplatform-resources", version.ref = "mokoResources" }
compose-compiler = { id = "org.jetbrains.kotlin.plugin.compose", version.ref = "kotlin" }

#Convention plugins
convetion-library = { id = "convention.android.library", version = "unspecified" }
convetion-detekt = { id = "convention.detekt", version = "unspecified" }
convetion-lint = { id = "convention.lint", version = "unspecified" }
